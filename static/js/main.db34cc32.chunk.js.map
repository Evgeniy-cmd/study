{"version":3,"sources":["component/Header.jsx","component/Filter.jsx","component/Item.jsx","component/LIstTodo.jsx","component/Pagination.jsx","userAPI.js","AlertError.js","App.js","reportWebVitals.js","index.js"],"names":["useStylesHeader","makeStyles","root","width","Header","addTodo","classesHeader","useState","value","setValue","idNum","setIdNum","Box","display","justifyContent","m","p","className","onSubmit","event","preventDefault","TextField","fullWidth","id","label","variant","onChange","target","onKeyDown","key","trim","alert","name","done","useStylesFilter","height","Filter","sortByCreatedAt","setView","classesFilter","Button","onClick","color","alignItems","IconButton","edge","aria-label","Item","todo","deleteTodo","doneTodo","changeTaskName","classesTextField","taskName","setTaskName","useEffect","uuid","ListItem","role","undefined","dense","button","ListItemIcon","Checkbox","tabIndex","disableRipple","checked","createdAt","ListItemSecondaryAction","useStyles","theme","margin","ListTodo","todos","stateCreatedAt","page","view","classesItem","sortUp","a","b","sortDown","filter","item","selectViewTodos","sort","List","_","index","map","marginTop","spacing","PaginationRounded","handlerChange","classes","Pagination","count","Math","ceil","length","shape","newTask","userId","keys","axios","post","getTask","get","doneTask","patch","deleteTask","delete","interceptors","response","use","status","error","AlertError","Snackbar","open","autoHideDuration","Alert","severity","useStyleApp","App","classesApp","setTodos","setStateCreatedAt","pages","setPage","setError","newTodo","data","message","todoIndex","uuidTodo","find","func","valueCreatedAt","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db34cc32.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\n\nconst useStylesHeader = makeStyles({\n    root: {\n        width: '50%'\n    }\n})\n\nfunction Header ({addTodo}) {\n    const classesHeader = useStylesHeader()\n    const [value, setValue] = useState('')\n    const [idNum, setIdNum] = useState(1)\n    \n    return (\n        <div>\n            <Box display ='flex' justifyContent = 'center' m = {1} p = {1}>\n                <form  className = {classesHeader.root} \n                onSubmit = {event => \n                    {event.preventDefault(); \n                    }}>\n                    <TextField fullWidth id=\"outlined-basic\" label=\"To Do:\" variant=\"outlined\" \n                        onChange = {event => {setValue(event.target.value)}}\n                        value = {value}\n                        onKeyDown = {event => {\n                            if(event.key === 'Enter'){\n                                if (event.target.value.trim() === ''){\n                                    alert('Input your task!')\n                                } else {\n                                    addTodo({name: value, done: false})\n                                    setIdNum (idNum + 1) \n                                    setValue('')\n                                        }}\n                                    }} />\n                </form>\n            </Box>    \n         </div>   \n    )\n}\n\nexport default Header","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { IconButton } from '@material-ui/core';\n\nconst useStylesFilter = makeStyles({\n    root: {\n        width: '100%',\n        height: '50px'\n    }\n}) \n\nfunction Filter ({sortByCreatedAt, setView }) {\n    const classesFilter = useStylesFilter()\n    return (\n        <div className = {classesFilter.root}>\n            <Box display = 'flex' justifyContent = 'space-between' m = {1} p = {1}>\n                   <Box display = 'flex'>\n                    <Box p = {1}>\n                        <Button variant=\"contained\" onClick={() => setView('All')}>All Tasks</Button>\n                    </Box>\n                    <Box p = {1}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => setView('Done')}>Done Tasks</Button>\n                    </Box> \n                    <Box p = {1}>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => setView('Undone')}>Undone Tasks</Button>\n                    </Box>\n                    </Box>\n                <Box display = 'inline-flex' alignItems = 'center' justifyContent = 'flex-end'>\n                    <p>Sort by Date:</p>\n                    <IconButton edge = 'end' aria-label = 'sortUp' onClick = {() => sortByCreatedAt(false)}>\n                        <ArrowUpwardIcon />\n                    </IconButton>\n                    <IconButton  aria-label = 'sortDown' onClick = {() => sortByCreatedAt(true)} >\n                        <ArrowDownwardIcon />\n                    </IconButton>\n                </Box>    \n            </Box>    \n        </div>\n    )\n}\n\nexport default Filter","import React, {useState, useEffect} from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStylesHeader = makeStyles({\n  root: {\n      width: '450px'\n  }\n})\n\nfunction Item({todo, deleteTodo, doneTodo, changeTaskName}) {\n  const classesTextField = useStylesHeader()\n  const [taskName, setTaskName] = useState(todo.name)\n\n  useEffect(() =>{\n    changeTaskName(taskName, todo.uuid)\n  },[taskName])\n\n        return (\n          <ListItem role={undefined} dense button>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                tabIndex={-1}\n                disableRipple\n                checked = {todo.done}\n                onChange = {() => {\n                  doneTodo(todo.uuid)             \n                } }\n              />\n            </ListItemIcon>\n              <TextField\n              className = {classesTextField.root} \n              id=\"standard-basic\" \n              value = {taskName} \n              onChange = {event => {setTaskName(event.target.value)}}\n              />\n            <p>{todo.createdAt}</p>\n            <ListItemSecondaryAction>\n              <IconButton edge=\"end\" aria-label=\"delete\" onClick = {() => deleteTodo(todo.uuid)}>\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      }\n\nexport default Item","import React from 'react'\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Item from './Item'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      margin: 5\n    },\n  }));\n\n\nfunction ListTodo({todos, deleteTodo, doneTodo, stateCreatedAt, page, view, changeTaskName}){\n    const classesItem = useStyles()\n    const sortUp = (a, b) => {\n      if(a.createdAt < b.createdAt) return 1\n      else if(a.createdAt > b.createdAt) return -1\n      else if(a.createdAt === b.createdAt) return 0\n    }\n    const sortDown = (a, b) => {\n      if(a.createdAt > b.createdAt) return 1\n      else if(a.createdAt < b.createdAt) return -1\n      else if(a.createdAt === b.createdAt) return 0\n     }\n\n     const selectViewTodos = (todos) => {\n      switch (view) {\n        case \"All\":\n          return todos;\n        case \"Done\":\n          return todos.filter(item => item.done);\n        case \"Undone\":\n          return todos.filter(item => !item.done);\n        default:\n          return [];\n      }\n    }\n\n    const sortByCreatedAt = () =>{\n      return selectViewTodos(todos.sort(stateCreatedAt ? sortUp : sortDown))\n    } \n\n\n\n    const renderItem  = () =>{\n        return sortByCreatedAt().filter((_,index)=> (index >= (page * 5))&&(index < (page * 5) + 5)).map(todo => \n        <Item \n        key = {todo.uuid} \n        todo = {todo} \n        deleteTodo={deleteTodo} \n        doneTodo={doneTodo} \n        changeTaskName = {changeTaskName}\n        />)\n    }\n    \n    \n\n    return(\n            <List className = {classesItem.root}>\n                {renderItem()}\n            </List>\n    )\n}\n\n\nexport default ListTodo\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\n\nexport default function PaginationRounded({todos, handlerChange}) {\n  const classes = useStyles();\n\n    \n    \n  return (\n    <div className={classes.root}>\n        <Box display = 'flex' justifyContent = 'center'>\n            <Pagination count = {Math.ceil(todos.length / 5)} variant=\"outlined\" shape=\"rounded\" onChange = {(handlerChange)} />\n        </Box> \n    </div>\n  );\n}\n\n","import axios from 'axios'\n\n\nexport const newTask = async(userId, keys) => {\n    return await axios.post(`https://todo-api-learning.herokuapp.com/v1/task/${userId}`, keys)    \n}    \n\nexport const getTask = async(userId) => {\n    return await axios.get(`https://todo-api-learning.herokuapp.com/v1/tasks/${userId}`)\n}\n\nexport const doneTask = async(userId, uuid, keys) => {\n    return await axios.patch(`https://todo-api-learning.herokuapp.com/v1/task/${userId}/${uuid}`, keys)  \n}\n\nexport const deleteTask = async(userId, uuid) => {\n      return await axios.delete(`https://todo-api-learning.herokuapp.com/v1/task/${userId}/${uuid}`)  \n}\n\naxios.interceptors.response.use((response) => {\n    if(response.status !== 200 && response.status !== 204){\n       return alert(`Error: ${response.status}`)\n    }\n    return response\n  }, \n  error => {\n    return error\n  })\n  ","import React, {useState} from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert'\n\nexport default function AlertError({error}) {\n  const [open, setOpen] = useState(false);\n  \n\n  return (\n     <Snackbar \n     open={true} \n     autoHideDuration={2000}>\n        <Alert severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n  );\n}","import React, {useState, useEffect} from 'react'\nimport Header from './component/Header'\nimport Filter from './component/Filter'\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles'\nimport ListTodo from './component/LIstTodo'\nimport Pagination from './component/Pagination'\nimport {deleteTask, getTask, newTask, doneTask} from './userAPI'\nimport AlertError from './AlertError'\n\nconst useStyleApp = makeStyles({\n  root: {\n    // background: '#aa4b6b',\n    // background: 'linear-gradient(to left, #3b8d99, #6b6b83, #aa4b6b)'\n  }\n})\n\nexport default function App() {\n  const classesApp = useStyleApp()\n  const [todos, setTodos] = useState([])\n  const [stateCreatedAt, setStateCreatedAt] = useState(false)\n  const [view, setView] = useState('All')\n  const [pages, setPage] = useState(0)\n  const [error, setError] = useState('')\n  \n  useEffect (() =>  {\n    async function func() {\n    const response = await getTask(2)\n    if(response.status === 200) {\n      setTodos(response.data)\n    } \n  }\n  func()}, [])\n\n  async function addNewTodo (newTodo) {\n    const response = await newTask(2 , {name: newTodo.name, done: newTodo.done})\n      if(response.status === 200){\n        setTodos([...todos, {\n        ...response.data}])\n        }\n        setError(response.message)\n  }\n  \n  async function deleteTodo (todoIndex) {\n    await deleteTask(2, todoIndex)\n    setTodos(todos.filter((todo) => todo.uuid !== todoIndex))\n    if(pages >= (todos.length - 1) / 5) {\n      setPage(pages-1)\n    }\n  }\n\n  async function doneTodo (uuidTodo) {\n    const checked = todos.find(item => item.uuid === uuidTodo)\n    const response = await doneTask(2, uuidTodo, {done: !checked.done})\n    if(response.status === 200) {\n    setTodos (\n      todos.filter(item => {\n        if (item.uuid === uuidTodo) {\n          item.done = response.data.done\n        }\n        return item\n      })\n  \n    )\n  }}\n\n  function sortByCreatedAt (valueCreatedAt) {\n    setStateCreatedAt(valueCreatedAt)\n  }\n\n  function handlerChange (e, page) {\n    if(page === 1) setPage(0)\n    else setPage(page-1)\n  }\n\n  async function changeTaskName (value, id) {\n    const response = await doneTask(2, id, {name: value})\n    if(response.status === 200) {\n    setTodos(todos.map(item => {\n      if(item.uuid === id){\n        item.name = value\n      } return item\n    }))}   \n  }\n\n\n  \n  return (\n    <div className = {classesApp.root}>\n      <Box display= 'flex' justifyContent = 'center' m = {1}>\n        <h1>My ToDo List</h1>\n      </Box>\n        <Header  addTodo = {addNewTodo} />\n        <Filter sortByCreatedAt = {sortByCreatedAt} setView={setView} />\n        <ListTodo todos = {todos} deleteTodo ={deleteTodo} doneTodo={doneTodo} stateCreatedAt = {stateCreatedAt} page = {pages} view={view} changeTaskName = {changeTaskName} />\n        <Pagination todos = {todos} handlerChange = {handlerChange}  />\n        <AlertError error = {error} />\n    </div>\n  )\n  }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <App>\n    <App />\n  </App>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}