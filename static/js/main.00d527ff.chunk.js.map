{"version":3,"sources":["component/Header.jsx","component/Filter.jsx","component/Item.jsx","component/LIstTodo.jsx","component/Pagination.jsx","token.js","tasksAPI.js","usersAPI.js","component/SignIn.jsx","component/SignUp.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStylesHeader","makeStyles","root","width","Header","addTodo","setErrMessage","classesHeader","useState","textValue","setTextValue","Box","display","justifyContent","m","p","className","onSubmit","event","preventDefault","TextField","fullWidth","id","label","variant","value","onChange","target","onKeyDown","key","trim","Error","name","done","error","message","useStylesFilter","height","Filter","props","filters","filtersForDate","classesFilter","Button","onClick","color","alignItems","IconButton","edge","aria-label","Item","todo","deleteTodo","doneTodo","changeTaskName","classesTextField","taskName","setTaskName","check","setCheck","ListItem","role","undefined","dense","button","ListItemIcon","Checkbox","checked","uuid","createdAt","ListItemSecondaryAction","useStyles","theme","margin","ListTodo","todos","classesItem","List","map","marginTop","spacing","PaginationRounded","handlerChange","countTodos","classes","Pagination","count","shape","tokenControl","localStorage","getItem","token","decodeToken","jwt_decode","Date","getTime","exp","removeItem","instance","axios","create","baseURL","headers","newTask","keys","a","post","response","getTask","params","get","doneTask","patch","deleteTask","delete","instanceUsers","postUser","typeRequest","paper","flexDirection","avatar","backgroundColor","palette","secondary","main","form","submit","SignIn","history","useHistory","email","setEmail","password","setPassword","errMessage","handleClose","reason","length","setItem","data","push","go","Container","component","maxWidth","CssBaseline","Avatar","Typography","noValidate","required","autoComplete","autoFocus","type","Grid","container","item","Link","Snackbar","open","autoHideDuration","onClose","Alert","severity","SignUp","firstName","setFirstName","lastName","setLastName","xs","sm","requiredasda","justify","querystring","require","App","setTodos","page","setPage","setCountTodos","filterDate","setFilterDate","newTodo","status","stringify","order","resGet","rows","Math","ceil","find","filter","statusItem","valueDate","e","useEffect","console","log","getAllTask","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.00d527ff.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box'\n\nconst useStylesHeader = makeStyles({\n    root: {\n        width: '50%'\n    }\n})\n\nfunction Header({ addTodo, setErrMessage }) {\n    const classesHeader = useStylesHeader()\n    const [textValue, setTextValue] = useState('')\n\n    return (\n        <div>\n            <Box display='flex' justifyContent='center' m={1} p={1}>\n                <form className={classesHeader.root}\n                    onSubmit={event => {\n                        event.preventDefault();\n                    }}>\n                    <TextField fullWidth id=\"outlined-basic\" label=\"To Do:\" variant=\"outlined\"\n                        value={textValue}\n                        onChange={event => setTextValue(event.target.value)}\n                        onKeyDown={event => {\n                            try {\n                                if (event.key === 'Enter') {\n                                    if (event.target.value.trim() === '') {\n                                        throw new Error('Input your task!')\n                                    } else {\n                                        addTodo({ name: textValue, done: false })\n                                        setTextValue(\"\")\n                                    }\n                                }\n                            }\n                            catch (error) {\n                                setErrMessage(error.message)\n                            }\n                        }\n                        }\n                    />\n                </form>\n            </Box>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Box from '@material-ui/core/Box';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { IconButton } from '@material-ui/core';\n\nconst useStylesFilter = makeStyles({\n    root: {\n        width: '100%',\n        height: '50px'\n    }\n})\n\nfunction Filter(props) {\n    const { filters, filtersForDate } = props\n    const classesFilter = useStylesFilter()\n    return (\n        <div className={classesFilter.root}>\n            <Box display='flex' justifyContent='space-between' m={1} p={1}>\n                <Box display='flex'>\n                    <Box p={1}>\n                        <Button variant=\"contained\" onClick={() => filters('')}>All Tasks</Button>\n                    </Box>\n                    <Box p={1}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => filters('true')}>Done Tasks</Button>\n                    </Box>\n                    <Box p={1}>\n                        <Button variant=\"contained\" color=\"secondary\" onClick={() => filters('false')}>Undone Tasks</Button>\n                    </Box>\n                </Box>\n                <Box display='inline-flex' alignItems='center' justifyContent='flex-end'>\n                    <p>Sort by Date:</p>\n                    <IconButton edge='end' aria-label='sortUp' onClick={() => filtersForDate('desc')}>\n                        <ArrowUpwardIcon />\n                    </IconButton>\n                    <IconButton aria-label='sortDown' onClick={() => filtersForDate('asc')} >\n                        <ArrowDownwardIcon />\n                    </IconButton>\n                </Box>\n            </Box>\n        </div>\n    )\n}\n\nexport default Filter","import React, { useState } from 'react'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStylesHeader = makeStyles({\n  root: {\n    width: '450px'\n  }\n})\n\nfunction Item({ todo, deleteTodo, doneTodo, changeTaskName }) {\n  const classesTextField = useStylesHeader()\n  const [taskName, setTaskName] = useState(todo.name)\n  const [check, setCheck] = useState(todo.done)\n  \n\n  return (\n    <ListItem role={undefined} dense button>\n      <ListItemIcon>\n        <Checkbox\n          edge=\"start\"\n          checked={check}\n          onChange={() => {\n            doneTodo(todo.uuid)\n            setCheck(!check)\n          }}\n        />\n      </ListItemIcon>\n      <TextField\n        className={classesTextField.root}\n        id=\"standard-basic\"\n        value={taskName}\n        onChange={(event) => setTaskName(event.target.value)}\n        onKeyDown={(event) => {\n          if (event.key === 'Enter') {\n            changeTaskName(taskName, todo.uuid)\n          }\n        }}\n      />\n      <p>{todo.createdAt}</p>\n      <ListItemSecondaryAction>\n        <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteTodo(todo.uuid)}>\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nexport default Item","import React from 'react'\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles'\nimport Item from './Item'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    margin: 5\n  },\n}));\n\n\nfunction ListTodo({ todos, deleteTodo, doneTodo, changeTaskName }) {\n  const classesItem = useStyles()\n  \n  const filters = () => {\n    return todos.map(todo =>\n      <Item\n        key={todo.uuid}\n        todo={todo}\n        deleteTodo={deleteTodo}\n        doneTodo={doneTodo}\n        changeTaskName={changeTaskName}\n      />\n    )\n  }\n\n\n  return (\n    <List className={classesItem.root}>\n      {filters()}\n    </List>\n  )\n}\n\n\nexport default ListTodo\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\n\nexport default function PaginationRounded({ handlerChange, countTodos }) {\n  const classes = useStyles();\n\n\n\n  return (\n    <div className={classes.root}>\n      <Box display='flex' justifyContent='center'>\n        <Pagination count={countTodos} variant=\"outlined\" shape=\"rounded\" onChange={(handlerChange)} />\n      </Box>\n    </div>\n  );\n}\n\n","import jwt_decode from 'jwt-decode'\n\nexport const tokenControl = () => {\n\n    if (localStorage.getItem('token') !== null) {\n\n        const token = localStorage.getItem('token')\n        const decodeToken = jwt_decode(token)\n        const realTime = new Date().getTime() / 1000\n\n        if (realTime > decodeToken.exp) {\n            localStorage.removeItem('token')\n            return false\n        }\n        return true\n    }\n    return false\n} \n","import axios from 'axios'\nimport { tokenControl } from './token'\n\nconst url = 'https://dry-plains-46747.herokuapp.com/'\n\nconst instance = axios.create(\n    {\n        baseURL: url,\n        headers: {\n            'Content-Type': 'application/json',\n            'token': localStorage.getItem('token')\n        }\n    }\n)\n\nexport const newTask = async (keys) => {\n    if (tokenControl()) {\n        const response = await instance.post('task', keys)\n        return response\n    }\n}\n\nexport const getTask = async (params) => {\n    if (tokenControl()) {\n        const response = await instance.get(`task?${params}`)\n        return response\n    }\n}\n\nexport const doneTask = async (uuid, keys) => {\n    if (tokenControl()) {\n        const response = await instance.patch(`task/${uuid}`, keys)\n        return response\n    }\n}\n\n\nexport const deleteTask = async (uuid) => {\n    if (tokenControl()) {\n        const response = await instance.delete(`task/${uuid}`)\n        return response\n    }\n}\n\n","import axios from 'axios'\n\nconst url = 'https://dry-plains-46747.herokuapp.com/'\n\nconst instanceUsers = axios.create(\n    {\n        baseURL: url,\n        headers: {\n            'Content-Type': 'application/json',\n        }\n    }\n)\n\nexport const postUser = async (keys) => {\n    const response = await instanceUsers.post(`user/` + keys.typeRequest, keys)\n    return response \n}\n\n","import React, { useState } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { postUser } from '../usersAPI'\nimport { useHistory } from \"react-router-dom\"\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default function SignIn() {\n  const classes = useStyles()\n  let history = useHistory()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [errMessage, setErrMessage] = useState('')\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setErrMessage(errMessage.length > 0)\n  }\n\n  const form = async (event) => {\n    try {\n      event.preventDefault()\n      const response = await postUser({\n        email: email,\n        password: password,\n        typeRequest: 'auth'\n      })\n      localStorage.setItem('token', response.data.token)\n      history.push('/app')\n      history.go()\n    } catch (error) {\n      setErrMessage(error.message)\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={email}\n            onChange={(event) => {\n              setEmail(event.target.value)\n            }}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(event) => {\n              setPassword(event.target.value)\n            }}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={(event) => form(event)}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link\n                onClick={() => {\n                  history.push('/reg')\n                }}\n                variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n          <Snackbar\n            open={errMessage.length > 0}\n            autoHideDuration={2000}\n            onClose={handleClose}>\n            <Alert\n              severity=\"error\"\n              onClose={handleClose}>\n              {errMessage}\n            </Alert>\n          </Snackbar>\n        </form>\n      </div>\n    </Container>\n  );\n}","import React, { useState } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport TextField from '@material-ui/core/TextField'\nimport Link from '@material-ui/core/Link'\nimport Grid from '@material-ui/core/Grid'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport { postUser } from '../usersAPI'\nimport { useHistory } from \"react-router-dom\"\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default function SignUp() {\n  const classes = useStyles()\n  let history = useHistory()\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [errMessage, setErrMessage] = useState('')\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setErrMessage(errMessage.length > 0)\n  }\n\n  const form = async (event) => {\n    try {\n      event.preventDefault()\n      const response = await postUser({\n        firstName: firstName,\n        lastName: lastName,\n        email: email,\n        password: password,\n        typeRequest: 'reg'\n      })\n      localStorage.setItem('token', response.data.token)\n      history.push('/app')\n      history.go()\n    }\n    catch (error) {\n      setErrMessage(error.message)\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                value={firstName}\n                onChange={(event) => {\n                  setFirstName(event.target.value)\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                value={lastName}\n                onChange={(event) => {\n                  setLastName(event.target.value)\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={email}\n                onChange={(event) => {\n                  setEmail(event.target.value)\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                requiredasda\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={(event) => {\n                  setPassword(event.target.value)\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={(event) => form(event)}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link\n                onClick={() => {\n                  history.push('/auth')\n                }}\n                variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n          <Snackbar\n            open={errMessage.length > 0}\n            autoHideDuration={2000}\n            onClose={handleClose}>\n            <Alert\n              severity=\"error\"\n              onClose={handleClose}>\n              {errMessage}\n            </Alert>\n          </Snackbar>\n        </form>\n      </div>\n    </Container>\n  );\n}","import React, { useState, useEffect } from 'react'\nimport Header from './component/Header'\nimport Filter from './component/Filter'\nimport Box from '@material-ui/core/Box'\nimport ListTodo from './component/LIstTodo'\nimport Pagination from './component/Pagination'\nimport { deleteTask, getTask, newTask, doneTask } from './tasksAPI'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport { HashRouter as Router, Switch, Route, useHistory } from 'react-router-dom'\nimport SignIn from './component/SignIn'\nimport SignUp from './component/SignUp'\nimport Button from '@material-ui/core/Button'\n\n\nconst querystring = require('querystring')\n\nexport default function App() {\n  const [todos, setTodos] = useState([])\n  const [page, setPage] = useState(0)\n  const [errMessage, setErrMessage] = useState('')\n  const [countTodos, setCountTodos] = useState(0)\n  const [check, setCheck] = useState('')\n  const [filterDate, setFilterDate] = useState('asc')\n\n\n  let history = useHistory()\n\n  useEffect(() => {\n    async function getAllTask() {\n      try {\n        const response = await getTask(querystring.stringify({\n          page: page,\n          order: 'asc'\n        }))\n        if (response.status === 200) {\n          setTodos(response.data.rows)\n          setCountTodos(Math.ceil(response.data.count / 5))\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    getAllTask()\n  }, [])\n\n\n\n  async function addNewTodo(newTodo) {\n    try {\n      const response = await newTask({ name: newTodo.name })\n      if (response.status === 200) {\n        const resGet = await getTask(querystring.stringify({\n          page: page,\n          done: check,\n          order: filterDate\n        }))\n        setTodos(resGet.data.rows)\n        setCountTodos(Math.ceil(resGet.data.count / 5))\n      }\n    } catch (error) {\n      setErrMessage('Task already exist')\n    }\n  }\n\n\n  async function deleteTodo(uuid) {\n    const response = await deleteTask(uuid)\n    if (response.status === 200) {\n      const resGet = await getTask(querystring.stringify({\n        page: page,\n        done: check,\n        order: filterDate\n      }))\n      setTodos(resGet.data.rows)\n      setCountTodos(Math.ceil(resGet.data.count / 5))\n    }\n  }\n\n  async function doneTodo(uuid) {\n    const checked = todos.find(item => item.uuid === uuid)\n    const response = await doneTask(uuid, { name: checked.name, done: !checked.done })\n    if (response.status === 200) {\n      setTodos(\n        todos.filter(item => {\n          if (item.uuid === uuid) {\n            item.done = response.data.done\n          }\n          return item\n        })\n\n      )\n    }\n    setErrMessage(response.message)\n  }\n\n  async function filters(statusItem) {\n    setCheck(statusItem)\n    const response = await getTask(querystring.stringify({\n      page: page,\n      done: statusItem,\n      order: filterDate\n    }))\n    setTodos(response.data.rows)\n    setCountTodos(Math.ceil(response.data.count / 5))\n  }\n\n  async function filtersForDate(valueDate) {\n    history = { history }\n    setFilterDate(valueDate)\n    const response = await getTask(querystring.stringify({\n      page: page,\n      order: valueDate,\n      done: check\n    }))\n    setTodos(response.data.rows)\n    setCountTodos(Math.ceil(response.data.count / 5))\n  }\n\n  async function handlerChange(e, page) {\n    if (page === 1) setPage(0)\n    else setPage(page - 1)\n\n    const response = await getTask(querystring.stringify({\n      page: page - 1,\n      order: filterDate,\n      done: check\n    }))\n    setTodos(response.data.rows)\n  }\n\n  async function changeTaskName(value, uuid) {\n    try {\n      const response = await doneTask(uuid, { name: value })\n      if (response.status === 200) {\n        setTodos(todos.map(item => {\n          if (item.uuid === uuid) {\n            item.name = value\n          } return item\n        }))\n      }\n    } catch (error) {\n      setErrMessage('Task already exist')\n    }\n  }\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setErrMessage(errMessage > 0)\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path='/reg' component={SignUp}>\n          <SignUp />\n        </Route>\n\n        <Route path=\"/auth\" component={SignIn}>\n          <SignIn />\n        </Route>\n\n        <Route path='/app' component={App}>\n          <div>\n            <Box display='flex' justifyContent='flex-end' margin={4}>\n              <Button variant=\"contained\" color=\"primary\"\n                onClick={() => {\n                  localStorage.removeItem('token')\n                  history.push('/auth')\n                }\n                }>\n                Log Out\n        </Button>\n            </Box>\n            <Box display='flex' justifyContent='center' m={1} p={10}>\n              <h1>My ToDo List</h1>\n            </Box>\n            <Header\n              addTodo={addNewTodo}\n              setErrMessage={setErrMessage} />\n            <Filter\n              filters={filters}\n              filtersForDate={filtersForDate} />\n            <ListTodo\n              todos={todos}\n              deleteTodo={deleteTodo}\n              doneTodo={doneTodo}\n              changeTaskName={changeTaskName}\n            />\n            <Pagination\n              handlerChange={handlerChange}\n              countTodos={countTodos} />\n            <Snackbar\n              open={errMessage.length > 0}\n              autoHideDuration={2000}\n              onClose={handleClose}>\n              <Alert\n                severity=\"error\"\n                onClose={handleClose}>\n                {errMessage}\n              </Alert>\n            </Snackbar>\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}